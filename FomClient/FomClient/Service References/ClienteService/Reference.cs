//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FomClient.ClienteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/Passagens.Model")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CpfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cpf {
            get {
                return this.CpfField;
            }
            set {
                if ((object.ReferenceEquals(this.CpfField, value) != true)) {
                    this.CpfField = value;
                    this.RaisePropertyChanged("Cpf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClienteService.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClienteByName", ReplyAction="http://tempuri.org/IClientService/GetClienteByNameResponse")]
        FomClient.ClienteService.Cliente GetClienteByName(string nome);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClienteByName", ReplyAction="http://tempuri.org/IClientService/GetClienteByNameResponse")]
        System.Threading.Tasks.Task<FomClient.ClienteService.Cliente> GetClienteByNameAsync(string nome);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AdicionarCliente", ReplyAction="http://tempuri.org/IClientService/AdicionarClienteResponse")]
        void AdicionarCliente(FomClient.ClienteService.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AdicionarCliente", ReplyAction="http://tempuri.org/IClientService/AdicionarClienteResponse")]
        System.Threading.Tasks.Task AdicionarClienteAsync(FomClient.ClienteService.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientes", ReplyAction="http://tempuri.org/IClientService/GetClientesResponse")]
        FomClient.ClienteService.Cliente[] GetClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientes", ReplyAction="http://tempuri.org/IClientService/GetClientesResponse")]
        System.Threading.Tasks.Task<FomClient.ClienteService.Cliente[]> GetClientesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : FomClient.ClienteService.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<FomClient.ClienteService.IClientService>, FomClient.ClienteService.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FomClient.ClienteService.Cliente GetClienteByName(string nome) {
            return base.Channel.GetClienteByName(nome);
        }
        
        public System.Threading.Tasks.Task<FomClient.ClienteService.Cliente> GetClienteByNameAsync(string nome) {
            return base.Channel.GetClienteByNameAsync(nome);
        }
        
        public void AdicionarCliente(FomClient.ClienteService.Cliente cliente) {
            base.Channel.AdicionarCliente(cliente);
        }
        
        public System.Threading.Tasks.Task AdicionarClienteAsync(FomClient.ClienteService.Cliente cliente) {
            return base.Channel.AdicionarClienteAsync(cliente);
        }
        
        public FomClient.ClienteService.Cliente[] GetClientes() {
            return base.Channel.GetClientes();
        }
        
        public System.Threading.Tasks.Task<FomClient.ClienteService.Cliente[]> GetClientesAsync() {
            return base.Channel.GetClientesAsync();
        }
    }
}
